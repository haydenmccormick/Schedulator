{"version":3,"file":"index.js","sources":["../src/constants.js","../src/components/Pagination/styled.js","../src/components/Pagination/Pagination.js","../src/components/CustomTable/styled.js","../src/utilities.js","../src/components/CustomTable/CustomTable.js","../src/index.js"],"sourcesContent":["export const PRIMARY = '#1E88E5'\nexport const FIRST = 'First'\nexport const LAST = 'Last'\nexport const PREVIOUS = 'Previous'\nexport const NEXT = 'NEXT'\n","import styled from 'styled-components'\nimport { PRIMARY } from '../../constants'\n\nexport const PaginationWrapper = styled.div`\n    background-color: ${(props) => (props.bgColor ? props.bgColor : PRIMARY)};\n    color: white;\n`\n\nexport const PaginationRowsWrapper = styled.div`\n    align-items: center;\n    display: flex;\n    padding-left: 1.3rem;\n`\n\nexport const PaginationSelect = styled.select`\n    width: 5rem;\n    padding: 0.5rem;\n`\n\nexport const PaginationNav = styled.nav`\n    display: flex;\n    justify-content: space-around;\n    padding: 0.5rem;\n    border-radius: 0;\n`\n\nexport const PaginationList = styled.ul`\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 0;\n\n    li {\n        align-items: center;\n        border: 1px solid white;\n        cursor: pointer;\n        display: flex;\n        font-weight: bold;\n        margin-right: 2rem;\n        padding: 0.5rem;\n    }\n\n    li:third-child {\n        cursor: none;\n    }\n`\nexport const PageNumberWrapper = styled.div`\n    align-items: center;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1.3rem;\n`\n\nexport const PaginationNumberInput = styled.input`\n    width: 6rem;\n`\n","import React from 'react'\nimport {\n    BsChevronDoubleLeft,\n    BsChevronDoubleRight,\n    BsChevronLeft,\n    BsChevronRight\n} from 'react-icons/bs'\nimport * as styled from './styled'\nimport { FIRST, LAST, NEXT, PREVIOUS } from '../../constants'\n\nexport default ({\n    currentPage,\n    getNextPage,\n    getPreviousPage,\n    getFirstPage,\n    getLastPage,\n    displayRowsPerPage,\n    bgColor,\n    useArrowIcons = true,\n    goToPage,\n    searchTerm\n}) => (\n    <styled.PaginationWrapper className='row' bgColor={bgColor}>\n        <styled.PaginationRowsWrapper className='col-md-1'>\n            <styled.PaginationSelect\n                className='pagination-select'\n                onChange={displayRowsPerPage}\n            >\n                <option value='5'>5</option>\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n                <option value='100'>100</option>\n            </styled.PaginationSelect>\n        </styled.PaginationRowsWrapper>\n        <styled.PaginationNav className='col-md-9'>\n            <styled.PaginationList className='pagination-list'>\n                <li onClick={() => getFirstPage()}>\n                    {useArrowIcons ? <BsChevronDoubleLeft /> : FIRST}\n                </li>\n                <li onClick={() => getPreviousPage()}>\n                    {useArrowIcons ? <BsChevronLeft /> : PREVIOUS}\n                </li>\n                <li className='current-page'>{currentPage}</li>\n                <li onClick={() => getNextPage()}>\n                    {useArrowIcons ? <BsChevronRight /> : NEXT}\n                </li>\n                <li onClick={() => getLastPage()}>\n                    {useArrowIcons ? <BsChevronDoubleRight /> : LAST}\n                </li>\n            </styled.PaginationList>\n        </styled.PaginationNav>\n        <styled.PageNumberWrapper className='col-md-2'>\n            <styled.PaginationNumberInput\n                type='text'\n                placeholder='Go to page'\n                onChange={goToPage}\n                value={searchTerm}\n                className='pagination-input'\n            />\n        </styled.PageNumberWrapper>\n    </styled.PaginationWrapper>\n)\n","import styled from 'styled-components'\nimport { PRIMARY } from '../../constants'\n\nexport const TableHead = styled.thead`\n    text-transform: capitalize;\n    background-color: ${(props) => (props.bgColor ? props.bgColor : PRIMARY)};\n    color: white;\n\n    th {\n        cursor: pointer;\n    }\n`\nexport const CustomTable = styled.div`\n    border: 1px solid #fafafa;\n`\n\nexport const TableData = styled.td`\n    user-select: all;\n    word-break: break-word;\n    width: 50px;\n`\n","export const sortArrayObjects = (key, order = true) => {\n    return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n            // property doesn't exist on either object\n            return 0\n        }\n\n        const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]\n        const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]\n\n        let comparison = 0\n        if (varA > varB) {\n            comparison = 1\n        } else if (varA < varB) {\n            comparison = -1\n        }\n        return order === false ? comparison * -1 : comparison\n    }\n}\n\nexport const getHeaders = (jsonFile) => {\n    const headers = []\n    jsonFile &&\n        jsonFile.map((obj) => {\n            const objKeys = Object.keys(obj)\n            objKeys.map((key) => {\n                if (!headers.includes(key)) {\n                    headers.push(key)\n                }\n            })\n        })\n\n    return headers\n}\n\nexport const flattenNestedObjects = (jsonFile) => {\n    return jsonFile.map((obj) => {\n        return flattenObjectFunc(obj)\n    })\n}\n\nconst flattenObjectFunc = function (ob) {\n    var toReturn = {}\n\n    for (var i in ob) {\n        if (!ob.hasOwnProperty(i)) continue\n\n        if (typeof ob[i] == 'object') {\n            var flatObject = flattenObjectFunc(ob[i])\n            for (var x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue\n\n                toReturn[i + '.' + x] = flatObject[x]\n            }\n        } else {\n            toReturn[i] = ob[i]\n        }\n    }\n    return toReturn\n}\n","import React, { useState, useEffect } from 'react'\nimport Pagination from '../Pagination'\nimport * as styled from './styled'\nimport {\n    sortArrayObjects,\n    flattenNestedObjects,\n    getHeaders\n} from '../../utilities'\n\nexport default ({ jsonFile, options }) => {\n    const { bgColor, useArrowIcons, flattenObjects } = options\n    const [currentPage, setCurrentPage] = useState(1)\n    const [rowsPerPage, setRowsPerPage] = useState(5)\n    const [searchTerm, setSearchTerm] = useState('')\n    const [sortOrder, setSortOrder] = useState(true)\n    const [filteredRecords, setFilteredRecords] = useState(jsonFile)\n    const [tableHeaders, setTableHeaders] = useState([])\n\n    useEffect(() => {\n        // Check if flattenObjects is set to true\n        if (flattenObjects) {\n            const flattenedObjects = flattenNestedObjects(jsonFile)\n            setFilteredRecords(flattenedObjects)\n            handleTableHeaders(flattenedObjects)\n        } else {\n            handleTableHeaders(jsonFile)\n        }\n    }, [])\n\n    // Set tableHeaders once\n    const handleTableHeaders = (file) => {\n        const headers = getHeaders(file)\n        setTableHeaders(headers)\n    }\n\n    const totalPages = Math.ceil(filteredRecords.length / rowsPerPage)\n    const indexOfLastRow = currentPage * rowsPerPage\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage\n    const currentRecords = filteredRecords.slice(\n        indexOfFirstRow,\n        indexOfLastRow\n    )\n\n    const renderTableRows = () => {\n        return currentRecords.map((currentRecord, index) => {\n            return (\n                <tr key={index.toString()}>\n                    {tableHeaders.map((header, indexKey) => {\n                        const value = currentRecord[header]\n                        return (\n                            <styled.TableData key={indexKey.toString()}>\n                                {typeof value === 'object'\n                                    ? JSON.stringify(value)\n                                    : value}\n                            </styled.TableData>\n                        )\n                    })}\n                </tr>\n            )\n        })\n    }\n\n    const handleSortColumn = (header) => {\n        setSortOrder(!sortOrder)\n        setFilteredRecords(\n            filteredRecords.sort(sortArrayObjects(header, sortOrder))\n        )\n    }\n\n    const renderTableHeader = () => {\n        return tableHeaders.map((header, index) => (\n            <th key={index.toString()} onClick={() => handleSortColumn(header)}>\n                {header}\n            </th>\n        ))\n    }\n\n    const getNextPage = () => {\n        if (currentPage !== totalPages) {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const getPreviousPage = () => {\n        if (currentPage !== 1) {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const getFirstPage = () => setCurrentPage(1)\n    const getLastPage = () => setCurrentPage(totalPages)\n    const displayRowsPerPage = (e) => {\n        setRowsPerPage(e.target.value)\n        setCurrentPage(1)\n    }\n\n    const goToPage = (e) => {\n        const pageNumber = e.target.value\n\n        if (pageNumber > 0 && pageNumber <= totalPages) {\n            setCurrentPage(pageNumber)\n            setSearchTerm(pageNumber)\n        }\n\n        if (pageNumber === '') {\n            setSearchTerm('')\n            setCurrentPage(1)\n        }\n    }\n\n    return (\n        <styled.CustomTable>\n            <table className='table table-hover table-striped'>\n                <styled.TableHead bgColor={bgColor}>\n                    <tr>{renderTableHeader()}</tr>\n                </styled.TableHead>\n                <tbody>{renderTableRows()}</tbody>\n            </table>\n\n            <Pagination\n                currentPage={currentPage}\n                getNextPage={getNextPage}\n                getPreviousPage={getPreviousPage}\n                getFirstPage={getFirstPage}\n                getLastPage={getLastPage}\n                displayRowsPerPage={displayRowsPerPage}\n                bgColor={bgColor}\n                useArrowIcons={useArrowIcons}\n                goToPage={goToPage}\n                searchTerm={searchTerm}\n            />\n        </styled.CustomTable>\n    )\n}\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport CustomTable from './components/CustomTable'\n\nexport const JSONToTable = ({ jsonFile, options }) => (\n    <CustomTable jsonFile={jsonFile} options={options} />\n)\n"],"names":["PRIMARY","FIRST","LAST","PREVIOUS","NEXT","PaginationWrapper","styled","div","props","bgColor","PaginationRowsWrapper","PaginationSelect","select","PaginationNav","nav","PaginationList","ul","PageNumberWrapper","PaginationNumberInput","input","currentPage","getNextPage","getPreviousPage","getFirstPage","getLastPage","displayRowsPerPage","useArrowIcons","goToPage","searchTerm","React","styled.PaginationWrapper","styled.PaginationRowsWrapper","styled.PaginationSelect","styled.PaginationNav","styled.PaginationList","BsChevronDoubleLeft","BsChevronLeft","BsChevronRight","BsChevronDoubleRight","styled.PageNumberWrapper","styled.PaginationNumberInput","TableHead","thead","CustomTable","TableData","td","sortArrayObjects","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","getHeaders","jsonFile","headers","map","obj","objKeys","Object","keys","includes","push","flattenNestedObjects","flattenObjectFunc","ob","toReturn","i","flatObject","x","options","flattenObjects","useState","setCurrentPage","rowsPerPage","setRowsPerPage","setSearchTerm","sortOrder","setSortOrder","filteredRecords","setFilteredRecords","tableHeaders","setTableHeaders","useEffect","flattenedObjects","handleTableHeaders","file","totalPages","Math","ceil","length","indexOfLastRow","indexOfFirstRow","currentRecords","slice","renderTableRows","currentRecord","index","toString","header","indexKey","value","styled.TableData","JSON","stringify","handleSortColumn","sort","renderTableHeader","e","target","pageNumber","styled.CustomTable","styled.TableHead","JSONToTable"],"mappings":"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"}